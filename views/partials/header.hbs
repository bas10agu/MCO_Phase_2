{{!-- {{log this}} --}}
 <div class="header_1">
            <div class = "header_1-logo" onclick="navigateToPost('/general')"></div>
            <div class="header_1-search">
                <input type="text" id="searchInput" placeholder="Search" style="width: 100%; background-color: transparent; color: inherit; border: none; outline: none;">
            </div>
            <div class="dropdown-content_search" id="dropdownSearchResults">
                <!-- Search results will be dynamically inserted here -->
            </div>
                    
            
            <div class="header_1-user" onclick="toggleDropdown_user()">
                <div class="header_1-user-pic" id="headerUserPic" style = "background-image: url('{{userData.photo}}')"></div>
            <div class="header_1-user-info">
                <div class="header_1-user-name" id="headerUserName">{{userData.username}}</div>
                <div class="header_1-user-id" id="headerUserId">ID{{slice userData.idNo 0 3}}-{{userData.college}}</div>
            </div>


                <div class="dropdown-content_user">
                    <a href="/viewProfile">View Profile</a>
                    <a href="/editProfile">Edit Profile</a>
                    <a href="/">Log Out</a>
                </div>
            </div>
            
        </div>
        <div class="header_2">
            <div class="color1"></div>
            <div class="color2"></div>
            <div class="header_2-channel">
                <div class="header_2-channel-pic"></div>
                <div class="header_2-channel-info">
                    <div class ="header_2-channel-info-1">De La Salle University</div>
                    <div class ="header_2-channel-info-2">A place for De La Salle University - Manila students, faculty, alumni, and fans! Animo La Salle! üèπ</div>
                </div>
            </div>
        </div>

        <script> 
            document.addEventListener('DOMContentLoaded', function () {
        loadUserProfile();
        });
        function loadUserProfile() {
            const storedProfileData = localStorage.getItem('userProfile');
            if (storedProfileData) {
                const userProfile = JSON.parse(storedProfileData);
        
                // Update header with user profile data
                let modifiedIdNos = userProfile.idNo.slice(0, 3);
                console.log('Modified idNo:', modifiedIdNo);
        }
        }

        document.addEventListener('DOMContentLoaded', function () {
  const searchInput = document.getElementById('searchInput');
  searchInput.addEventListener('input', debounce(function(e) {
      const query = e.target.value.trim();
      if (query.length > 1) { // Only search if there are 2 or more characters
          fetchSearchResults(query);
      } else {
          clearSearchResults(); // Clear results if the query is too short
      }
  }, 250)); // Debounce to reduce the number of requests
});

function fetchSearchResults(query) {
  // Adjust the fetch URL to use your server's search route
  fetch(`/search?q=${encodeURIComponent(query)}`, {
      method: 'GET',
      headers: {
          'Accept': 'application/json',
      },
  })
  .then(response => response.json())
  .then(data => {
      updateSearchResults(data);
  })
  .catch(error => {
      console.error('Error fetching search data:', error);
  });
}

function updateSearchResults(results) {
  const dropdown = document.getElementById('dropdownSearchResults');
  dropdown.innerHTML = ''; // Clear existing results
  results.forEach(item => {
      const a = document.createElement('a');
      // Use the item's URL and title for the search result entry
      // Modify this part to fit how your search result data is structured
      a.href = `/post/${item._id}`; // Example URL, adjust based on your routing
      a.textContent = item.Title; // Assuming your items have a 'Title' property
      dropdown.appendChild(a);
  });
  dropdown.style.display = results.length ? 'block' : 'none';
}

function clearSearchResults() {
  const dropdown = document.getElementById('dropdownSearchResults');
  dropdown.innerHTML = '';
  dropdown.style.display = 'none';
}

function debounce(func, wait, immediate) {
  var timeout;
  return function() {
      var context = this, args = arguments;
      var later = function() {
          timeout = null;
          if (!immediate) func.apply(context, args);
      };
      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) func.apply(context, args);
  };
}
        </script>

 
